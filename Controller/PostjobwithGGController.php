<?php
define('__ROOT__', dirname(dirname(__FILE__)));
require_once(__ROOT__.'/Config.php');
require_once(__ROOT__.'/conn.php');



$Id =  $_POST['Id'];
$RefId =  $_POST['RefId'];
$ProcessType =  $_POST['ProcessType'];
$WithImageEdit =  $_POST['WithImageEdit'];



$sql =  "SELECT seg.DocFilename,outlook.Ref FROM TPCCR_DOCUMENT_SEG seg LEFT JOIN tbl_tpccr_outlook_files outlook ON outlook.Id = seg.RefId  where seg.RefId = {$RefId} AND seg.Id = {$Id}
		 UNION ALL 
		SELECT inv.DocFilename,outlook.Ref FROM TPCCR_INVENTORY inv LEFT JOIN tbl_tpccr_outlook_files outlook ON outlook.Id = inv.RefId  where inv.RefId = {$RefId} AND inv.Id = {$Id}";
$res=odbc_exec($conWMS,$sql);	
$data = odbc_fetch_array($res);


$getfilename = ($data['DocFilename']);


 $File_Name = pathinfo($getfilename,PATHINFO_FILENAME);
 $File_Extension = pathinfo($getfilename,PATHINFO_EXTENSION);

if($File_Extension != "PDF" || $File_Extension != "pdf")
{
	$filename =  $File_Name.'.pdf';
}
else
{
	$filename = $getfilename ;
}

 



$sqls="EXEC USP_PRIMO_INTEGRATE @Filename='".$filename."',@ProcessType='".$ProcessType."',@WithImageEdit='".$WithImageEdit."',@Jobid='' ";
ExecuteQuerySQLSERVER ($sqls,$conWMS);



$RefId_PRIMO = GetWMSValue("Select RefId From PRIMO_Integration WHERE Filename='".$filename."'","RefId",$conWMS);


$Createdirectory = $_SERVER['DOCUMENT_ROOT']."\\".$ProjectName.'\\uploadfiles\\'.$RefId_PRIMO;
if (!file_exists($Createdirectory)){
	mkdir($Createdirectory, 0777, true);
}

$SOURCE_FILE  = $_SERVER['DOCUMENT_ROOT']."\\".$ProjectName."\\".$folderName."\\".$data['Ref']."\\".$filename;
$DESTINATION  = $_SERVER['DOCUMENT_ROOT']."\\".$ProjectName.'\\uploadfiles\\'.$RefId_PRIMO.'\\'.$filename; 
copy($SOURCE_FILE,$DESTINATION);


$JobID= GetWMSValue("Select JobID From PRIMO_Integration WHERE Filename='".$filename."'","JobId",$conWMS);
$sFilename=$filename;



           
$token = getAPIKey($GGUserName,$GGPassword,$GGProductionMode);
UploadToGoldenGate($filename,$JobID,$token,$conWMS,$sFilename,$ProjectName,$RefId_PRIMO,$RefId,$Id);



function UploadToGoldenGate($prFilename,$prJobID,$token,$conWMS,$sFilename,$ProjectName,$RefId_PRIMO,$RefId,$Id){
  $fields = array();
  $_SESSION['token']=$token;
    
	
	// files to upload
	
	$filenames = array($prFilename);
	$files = array();
	foreach ($filenames as $f){
	   $files[$f] = file_get_contents($_SERVER['DOCUMENT_ROOT']."/".$ProjectName."/uploadfiles/".$RefId_PRIMO."/".$f);
	}


    // URL to upload to
    $url = "https://api.innodata.com/v1.1/documents";


    $curl = curl_init();

    $url_data = http_build_query($fields);
    $ext = pathinfo($prFilename, PATHINFO_EXTENSION);

    $boundary = uniqid();
    $delimiter = '-------------' . $boundary;

    $post_data = build_data_files($boundary, $fields, $files);

    if (strtoupper($ext)=='PDF'){
      $xType='application/pdf';
    }
    else{
      $xType='text/'.$ext;
    }


    curl_setopt_array($curl, array(
      CURLOPT_URL => $url,
      CURLOPT_RETURNTRANSFER => 1,
      CURLOPT_MAXREDIRS => 10,
      //CURLOPT_TIMEOUT => 30,
      CURLOPT_TIMEOUT => 0,
      //CURLOPT_HTTP_VERSION => CURL_HTTP_VERSION_1_1,
      CURLOPT_CUSTOMREQUEST => "POST",
      CURLOPT_POST => 1,
      CURLOPT_POSTFIELDS => $post_data,
      CURLOPT_USERPWD => $token.":".$token,
      // "Authorization: Basic dXNlci1saXZlLTYzMmE1YTYzLWQ2ZDYtNDI0Ni05MWNhLWQ1NDY2MzI2OThkMzo=",
      CURLOPT_HTTPHEADER => array(
        "Content-Type: application/octet-stream; boundary=" . $delimiter,
        "X-Name: " . $prFilename,
        "X-type: ".$xType ,
        "Content-Length: " . strlen($post_data)

      ),

      
    ));


    //
    $response = curl_exec($curl);

    $jobj = json_decode($response);

    $ContentURI = $jobj->response->contents_uri;
    $fSize = $jobj->response->size;

    ExecuteQuerySQLSERVER("Update PRIMO_integration SET ContentURI='".$ContentURI."' Where JobId='".$prJobID."'",$conWMS);
	

    // POST JOBS
    // echo $ContentURI;
    
    $info = curl_getinfo($curl);

    
    curl_close($curl);

    PostJob($token,$ContentURI,$prFilename,$fSize,$conWMS,$isImage="",$prJobID);
	
	
	
	
	
	$sql1 = "UPDATE  TPCCR_INVENTORY  SET status = 'posted' where RefId = {$RefId} AND  Id = {$Id} ";
	odbc_exec($conWMS,$sql1);	
	
	$sql2 = "UPDATE  TPCCR_DOCUMENT_SEG  SET status = 'posted' where RefId = {$RefId} AND  Id = {$Id} ";
	odbc_exec($conWMS,$sql2);	

}



function PostJob($token,$ContentURI,$filename,$fSize,$conWMS,$isImage,$prJobID){
	
	include(__ROOT__.'/Config.php');
    // Generated by curl-to-PHP: http://incarnate.github.io/curl-to-php/
    $ch = curl_init();

    curl_setopt($ch, CURLOPT_URL, 'https://api.innodata.com/v1.1/jobs');

    curl_setopt($ch, CURLOPT_RETURNTRANSFER, 1);

    // CURLOPT_USERPWD => $token.":".$token,
    curl_setopt($ch, CURLOPT_POST, 1);
    

    // curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"collaboration\":{\"teams\":[{\"name\":\"WKLI\",\"steps\":[\"*\"]}]},\"input_content\":{\"role\":\"input\",\"uri\":\"".$ContentURI."\"},\"metadata\":{\"mapping\":{\"high_confidence_threshold\":\"1.0\",\"qa\":{\"teams\":[{ \"from\": \"8e651b35-074e-4d44-a306-5be24baac8e7\", \"to\": \"764bc3b8-94d0-4228-a218-b83f6078ea8a\" }]},\"taxonomy\":\"wkli-taxonomy.json\"},\"text-extraction\":{\"ocr\":true},\"zoning\":{\"high_confidence_threshold\":\"0\"}},\"type\":\"data-point-extraction\",\"use_for_training\":true}");
    //curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"collaboration\":{\"teams\":[{\"name\":\"".$GGTeam."\",\"steps\":[\"*\"]}]},\"input_content\":{\"role\":\"input\",\"uri\":\"".$ContentURI."\"},\"metadata\":{\"mapping\":{\"high_confidence_threshold\":\"1.0\",\"qa\":{\"teams\":[]},\"taxonomy\":\"".$GGTaxonomy."\"},\"zoning\":{\"high_confidence_threshold\":\"1.0\"}},\"type\":\"data-point-extraction\",\"use_for_training\":false}");
    //curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"collaboration\":{\"teams\":[{\"name\":\"TPCCR\",\"steps\":[\"*\"]}]},\"input_content\":{\"role\":\"input\",\"uri\":\"".$ContentURI."\"},\"metadata\":{\"mapping\":{\"high_confidence_threshold\":\"1.0\",\"qa\":{\"teams\":[]},\"taxonomy\":\"legal-bu-taxonomy-test-v2.json\"},\"zoning\":{\"high_confidence_threshold\":\"1.0\",\"taxonomy\":\"19-zones-taxonomy.json\"},\"reading\":{\"high_confidence_threshold\":\"1.0\"}},\"type\":\"data-point-extraction\",\"use_for_training\":true}"); doc2xml
    //curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"collaboration\":{\"teams\":[{\"name\":\"".$GGTeam."\",\"steps\":[\"*\"]}]},\"input_content\":{\"role\":\"input\",\"uri\":\"".$ContentURI."\"},\"metadata\":{\"mapping\":{\"high_confidence_threshold\":\"1.0\",\"qa\":{\"teams\":[]},\"taxonomy\":\"".$GGTaxonomyMapping."\"},\"zoning\":{\"high_confidence_threshold\":\"1.0\",\"taxonomy\":\"".$GGTaxonomyZoning."\"},\"reading\":{\"high_confidence_threshold\":\"1.0\"}},\"type\":\"".$GGJobType."\",\"use_for_training\":true}"); 
    curl_setopt($ch, CURLOPT_POSTFIELDS, "{\"collaboration\":{\"teams\":[{\"name\":\"".$GGTeam."\",\"steps\":[\"*\"]}]},\"input_content\":{\"role\":\"input\",\"uri\":\"".$ContentURI."\"},\"metadata\":{\"mapping\":{\"high_confidence_threshold\":\"".$mapping."\",\"qa\":{\"teams\":[]},\"taxonomy\":\"".$GGTaxonomyMapping."\"},\"zoning\":{\"high_confidence_threshold\":\"".$zoning."\",\"taxonomy\":\"".$GGTaxonomyZoning."\"},\"reading\":{\"high_confidence_threshold\":\"1.0\"}},\"type\":\"".$GGJobType."\",\"use_for_training\":true}"); 
      
      curl_setopt($ch, CURLOPT_USERPWD, $token . ":" . $token);  
      $headers = array();
      $headers[] = 'Accept: application/json';
      $headers[] = 'Content-Type: application/json';
      curl_setopt($ch, CURLOPT_HTTPHEADER, $headers);

      $result = curl_exec($ch);


      $jobj = json_decode($result);


      // $A1=explode('"id":"',$result);
      // $A2=explode('"', $A1[1]);

      // $GGJobID = $A2[0];
        
      $GGJobID = $jobj->response->id;


      ExecuteQuerySQLSERVER("Update PRIMO_integration SET GGJobID='".$GGJobID."'  Where JobId='".$prJobID."'",$conWMS);


      if (curl_errno($ch)) {
          echo 'Error:' . curl_error($ch);
      }
      curl_close($ch);


}
 



function reArrayFiles($file)
{
    $file_ary = array();
    $file_count = count($file['name']);
    $file_key = array_keys($file);
   
    for($i=0;$i<$file_count;$i++)
    {
        foreach($file_key as $val)
        {
            $file_ary[$i][$val] = $file[$val][$i];
        }
    }
    return $file_ary;
}



function build_data_files($boundary, $fields, $files){
    $data = '';
    $eol = "\r\n";

    $delimiter = '-------------' . $boundary;

    foreach ($fields as $name => $content) {
        $data .= "--" . $delimiter . $eol
            . 'Content-Disposition: form-data; name="' . $name . "\"".$eol.$eol
            . $content . $eol;
    }


    foreach ($files as $name => $content) {
      $fieldname='file';
        $data .= "--" . $delimiter . $eol
            . 'Content-Disposition: form-data; name="' . $fieldname . '"; filename="' . $name . '"' . $eol
            . 'Content-Type: xml/text'.$eol
            // . 'Content-Transfer-Encoding: binary'.$eol
            ;

        $data .= $eol;
        $data .= $content . $eol;
       
    }
    $data .= "--" . $delimiter . "--".$eol;


    return $data;
}





echo "DONE";
?>